---
apiVersion: v1
kind: ConfigMap
metadata:
  name: front-envoy
  namespace: default
data:
  envoy.yaml: >
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        use_original_dst: true
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              generate_request_id: true
              access_log:
              - name: envoy.file_access_log
                config:
                  path: "/dev/stdout"
              tracing:
                operation_name: egress
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: backend
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: service1
                    decorator:
                      operation: service1
              http_filters:
              - name: envoy.router
                config: {}
      clusters:
      - name: service1
        connect_timeout: 0.250s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: service1
            port_value: 80
      - name: honeycomb-opentracing-proxy
        connect_timeout: 1s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: honeycomb-opentracing-proxy
            port_value: 9411
    tracing:
      http:
        name: envoy.zipkin
        config:
          collector_cluster: honeycomb-opentracing-proxy
          collector_endpoint: "/api/v1/spans"
    admin:
      # Could be tailed with a sidecar container.
      access_log_path: "/var/log/admin-access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service1-envoy
  namespace: default
data:
  envoy.yaml: >
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        use_original_dst: true
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              tracing:
                operation_name: ingress
              stat_prefix: ingress_http
              route_config:
                name: service1_route
                virtual_hosts:
                - name: service1
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
                    decorator:
                      operation: service1-envoy-ingress
              http_filters:
              - name: envoy.router
                config: {}
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 9000
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              tracing:
                operation_name: egress
              stat_prefix: egress_http
              route_config:
                name: service2_route
                virtual_hosts:
                - name: service2
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: service2
                    decorator:
                      operation: service2
              http_filters:
              - name: envoy.router
                config: {}
      clusters:
      - name: local_service
        connect_timeout: 0.250s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: 147.0.0.1
            port_value: 8080
      - name: service2
        connect_timeout: 0.250s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: service2
            port_value: 80
      - name: honeycomb-opentracing-proxy
        connect_timeout: 1s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: honeycomb-opentracing-proxy
            port_value: 9411
    tracing:
      http:
        name: envoy.zipkin
        config:
          collector_cluster: honeycomb-opentracing-proxy
          collector_endpoint: "/api/v1/spans"
    admin:
      access_log_path: "/var/log/admin-access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: service2-envoy
  namespace: default
data:
  envoy.yaml: >
    static_resources:
      listeners:
      - address:
          socket_address:
            address: 0.0.0.0
            port_value: 80
        use_original_dst: true
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            config:
              codec_type: auto
              tracing:
                operation_name: ingress
              stat_prefix: ingress_http
              route_config:
                name: local_route
                virtual_hosts:
                - name: service2
                  domains:
                  - "*"
                  routes:
                  - match:
                      prefix: "/"
                    route:
                      cluster: local_service
                    decorator:
                      operation: service2-envoy-ingress
              http_filters:
              - name: envoy.router
                config: {}
      clusters:
      - name: local_service
        connect_timeout: 0.250s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: 147.0.0.1
            port_value: 8080
      - name: honeycomb-opentracing-proxy
        connect_timeout: 1s
        type: strict_dns
        lb_policy: round_robin
        hosts:
        - socket_address:
            address: honeycomb-opentracing-proxy
            port_value: 9411
    tracing:
      http:
        name: envoy.zipkin
        config:
          collector_cluster: honeycomb-opentracing-proxy
          collector_endpoint: "/api/v1/spans"
    admin:

      access_log_path: "/var/log/admin-access.log"
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: honeycomb-opentracing-proxy
  namespace: default
  labels:
    app: honeycomb-opentracing-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: honeycomb-opentracing-proxy
  template:
    metadata:
      labels:
        app: honeycomb-opentracing-proxy
        envoy: "true"
    spec:
      containers:
      - name: honeycomb-opentracing-proxy
        args: ["--debug", "-d", "examples.kubernetes.envoy-traces", "-k", "$(HONEYCOMB_WRITEKEY)"]
        image: honeycombio/honeycomb-opentracing-proxy:1.78
        env:
        - name: HONEYCOMB_WRITEKEY
          valueFrom:
            secretKeyRef:
              name: honeycomb-writekey
              key: key
      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service1
  namespace: default
  labels:
    app: service1
spec:
  replicas: 3
  selector:
    matchLabels:
      app: service1
  template:
    metadata:
      labels:
        app: service1
        envoy: "true"
        exposed: "true"
        magiclabel: "true"
        team: product
        environment: production
        release: stable
    spec:
      containers:
      - name: service1
        image: honeycombio/dockercon-2018-flaskapp:v0.1.0
        env:
        - name: SERVICE_NAME
          value: "1"
      - name: envoy
        image: envoyproxy/envoy-alpine:a89eb3c59204caa3e0cd1bcd845bcb1a0be95267
        command: ["envoy"]
        args: ["-c", "/etc/envoy.yaml", "--service-cluster", "$(POD_NAME)"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: envoy-yaml
        configMap:
          name: service1-envoy

      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: service2
  namespace: default
  labels:
    app: service2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: service2
  template:
    metadata:
      labels:
        app: service2
        envoy: "true"
        team: product
        environment: production
        release: stable
    spec:
      containers:
      - name: service2
        image: honeycombio/dockercon-2018-flaskapp:v0.1.0
        env:
        - name: SERVICE_NAME
          value: "2"
      - name: envoy
        image: envoyproxy/envoy-alpine:a89eb3c59204caa3e0cd1bcd845bcb1a0be95267
        command: ["envoy"]
        args: ["-c", "/etc/envoy.yaml", "--service-cluster", "$(POD_NAME)"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: envoy-yaml
        configMap:
          name: service2-envoy

      restartPolicy: Always
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: front-envoy
    envoy: "true"
  name: front-envoy
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-envoy
  template:
    metadata:
      labels:
        app: front-envoy
        team: platform
        environment: production
        release: stable
        envoy: "true"
    spec:
      containers:
      - name: front-envoy
        image: envoyproxy/envoy-alpine:a89eb3c59204caa3e0cd1bcd845bcb1a0be95267
        command: ["envoy"]
        args: ["-c", "/etc/envoy.yaml", "--service-cluster", "$(POD_NAME)"]
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        volumeMounts:
        - name: envoy-yaml
          mountPath: /etc/envoy.yaml
          subPath: envoy.yaml
      volumes:
      - name: envoy-yaml
        configMap:
          name: front-envoy

      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: honeycomb-opentracing-proxy
  labels:
    app: honeycomb-opentracing-proxy
  namespace: default
spec:
  ports:
  - name: honeycomb-opentracing-proxy
    port: 9411
  selector:
    app: honeycomb-opentracing-proxy
---
apiVersion: v1
kind: Service
metadata:
  name: front-envoy
  namespace: default
spec:
  selector:
    app: front-envoy
  ports:
  - protocol: TCP
    port: 8001
    name: admin
  - protocol: TCP
    port: 80
    name: proxy
---
apiVersion: v1
kind: Service
metadata:
  name: service1
  namespace: default
spec:
  selector:
    app: service1
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: service2
  namespace: default
spec:
  selector:
    app: service2
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
